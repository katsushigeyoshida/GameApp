/// <summary>
/// ヘルプテキスト
/// </summary>
namespace GameApp
{
    class HelpText
    {
        public static string mCalcurateHelp =
            "【計算式電卓】\n" +
            "計算式を入力して計算するソフト\n" +
            "\n■特徴\n" +
            "　計算式を計算するので式を確認しながら計算できる\n" +
            "　計算式を登録できその時にパラメータを引数として入力できる\n" +
            "\n■画面構成\n" +
            "　1行目：タイトル行　(登録した計算式のタイトルで選択できる)\n" +
            "　2行目：コメント行　(登録した計算式の説明)\n" +
            "　3行目：計算式入力行\n" +
            "　4行目：計算結果の表示行\n" +
            "　最終行：操作ボタン\n" +
            "　登録した計算式に引数がある場合には4行目と最終行のの間に引数の入力行が表示される。\n" +
            "　[登録]ボタン：現在表示されている内容で登録、すでに同じタイトルの物があれば上書きします。\n" +
            "　[削除]ボタン：表示されているタイトルの計算式を登録から削除する\n" +
            "　[コピー]ボタン：計算結果をクリップボードにコピーする\n" +
            "　[関数]ボタン：使用できる関数の一覧を表示、選択すると計算式欄に追加される\n" +
            "　[クリア]ボタン：計算式の欄と引数入力欄をクリアする\n" +
            "　[計算]ボタン：入力した計算式を実行する\n" +
            "　[?]ボタン：ヘルプ(この内容)を表示\n" +
            "\n■計算式\n" +
            "　数値：0～9の数値、-記号、指数(2.1E3 → 2,100)\n" +
            "　定数：PI(円周率)、E(自然対数の底)\n" +
            "　二項演算子：+(加算),-(減算),*(乗算),/(除算),%(剰余),^(べき乗)\n" +
            "　　　　　　　優先順位：^ >> *,/,% >> +,-\n" +
            "　関数：使用できる関数や定数については[関数]ボタンで表示される内容を参照方\n" +
            "　例： 1+2*3^2 ⇒ 19、3*sin(RAD(30)) ⇒ 1.5\n" +
            "　引数：大括弧[]で囲まれた文字列は引数と扱います。\n" +
            "　　　　計算式の中に引数を入れて登録するとその計算式を選んだ時に引数の入力行が表示される\n" +
            "　　　　引数の入力欄に数値を入れて計算ボタンを押すと引数の代わりに数値が入って計算します\n" +
            "　　　　例：BMIを計算する ⇒ [体重kg]/([身長m]*[身長m])　では[体重kg]と[身長m]が引数入力となる\n" +
            "\n■特殊な関数\n" +
            "　sum(f[@],n,k)：級数の和 f(n1)+f(n2)+f(n3)・・・f(k) を求める\n" +
            "　　例：sum(2*[@],2,5)  ⇒  2*2+2*3+2*4+2*5 ⇒ 28 (つまり4～10までの偶数の和)\n" +
            "　product(f[@],n,k)：級数の積 f(n1)*f(n2)*f(n3)・・・f(k) を求める\n" +
            "　　例：product([@],1,5)　⇒ 1*2*3*4*5 ⇒ 120 (これは5の階乗と同じ\n" +
            "　";

        public static string mFractalHelp =
            "【フラクタル図形】\n\n" +
            "フラクタル図形とは、その図形の一部として、図形全体と相似な形を含むような図形をいいます。\n\n" +
            "　図形名：選択した図形名によって形が変わります。\n" +
            "　　　　　図形名に(3Dフラクタル)と記載されているものはマウスのボタンを押すことで回転します\n" +
            "　　　　　ボタンの左・中・右でX・Z・Yの回転します\n" +
            "　分岐数：数値が大きくなるほど細かくなります。\n" +
            "　　　　　図形の種類によっては細かくすると表示に時間のかかるものがあります\n" +
            "  [RIEULペアノ曲線]のみ左ボタンでパターンが変わり、変わった状態で右ボタンを押すと図形の大きさが変わっていきます。\n";

        public static string mFuncGraphHelp =
            "【関数グラフ】\n" +
            "　数式を入力してグラフの描画を行う。\n" +
            "\n■使用できる数式の種類\n" +
            "  1.一般的な一次元の方程式(直交座標) y = f(x)\n" +
            "  2.媒介変数(パラメトリック)を使った式 x = f(t); y = g(t)\n" +
            "  3.極方程式(極座標) r = f(t)　(tは角度、rは長さ)\n" +
            "  記述例: $複数関数;f1([x]); f2([x]); f3([x])\n" +
            "          $変数指定;f([a], [x]);[a]=3\n" +
            "          $パラメトリック;f([t]); g([t])\n" +
            "          $極方程式;f[t])\n" +
            "\n■画面構成\n" +
            "　1行目：数式を入力するか、または選択\n" +
            "　2行目：パラメータの範囲とその分割数を入力、数式の種類を選択\n" +
            "　 　　　分割数は大きくすると線が滑らかになりますが計算時間がかかります\n" +
            "　3行目：ｙの範囲を指定、[自動]にチェックを入れると最小値と最大値を使用する\n" +
            "　　　　　アスペクト比[固定]にチェックを入れるとxとyとのスケールが同じになる\n" +
            "　ボタン：[実行]:表示されている数式からグラフを表示し、リストに登録する\n" +
            "　　　　　[関数]:数式に使用できる関数の一覧を表示、選択する数式欄に追加される\n" +
            "　　　　　[削除]:表示されている数式を登録リストから削除する\n" +
            "　　　　　[?]   :ヘルプの表示(いま見ているもの)\n" +
            "\n■数式\n" +
            "　数式はセミコロン(;)で区切れば複数記述することができます。\n" +
            "　数式の始まりが$であればコメントとし処理されません\n" +
            "　数式の登録キーワードは最初の数式がコメントであれば、それがキーワードとして登録されます\n" +
            "　コメントでなければ最初の数式がキーワードとして登録されます。\n" +
            "　ただし数式の種類が媒介変数の場合は最初の二つの数式がキーワードとなります。\n" +
            "　数式が複数ある場合は複数の数式に対して色分けでグラフ表示します。\n" +
            "　数式の種類が媒介変数の場合は二つの数式がセットになっていないといけません\n" +
            "\n■数式の変数(パラメータ)\n" +
            "　大括弧[]で囲まれたものが変数として扱います。\n" +
            "　一般的な一次元方程式は[x]を変数としますが、媒介変数方程式と極方程式は[t]を変数とします\n" +
            "　それ以外物の変数として使用できますが必ず定数を設定する記述が必要です\n" +
            "　　例 変数代入: $タイトル;sin([x])*[a];[a]=0.2    ⇒ y=sin(x)*0.2と同じ\n" +
            "\n■数式とその種別\n" +
            "  1.一般的な一次元の方程式(直交座標) y = f(x)で表される数式\n" +
            "　　例：$放物線;[x]^2\n" +
            "  2.媒介変数(パラメトリック)を使った式 x = f(t); y = g(t)\n" +
            "　　[t]を変数として最初の数式が x 2つめの数式が y を求めます\n" +
            "　　例：$円;sin([t]);cos([t])\n" +
            "  3.極方程式(極座標) r = f(t)　(tは角度、rは長さ)\n" +
            "　　原点からの角度を変数(t)として距離(r)を求め、それをx,yに変換(x=r・cos(t),y=r・sin(t))します\n" +
            "　　例：$正葉曲線12;sin(6*[t])\n";

        public static string mGraph3DHelp =
            "【三次元関数グラフ】\n" +
            "　数式を入力して三次元のグラフ表示を行います。\n" +
            "　画面上でマウスの左ボタンでグラフを回転させたり、マウスホイールで拡大縮小を行うことができます。\n" +
            "\n■使用できる数式\n0+" +
            "  1.一般的な一次元の方程式(直交座標) z = f(x,y)\n" +
            "  2.媒介変数(パラメトリック)を使った式  x = f(s,t); y = g(s,t) z =h(s,t)\n" +
            "\n■画面構成\n" +
            "　[関数]コンボボックス：数式の入力または登録した数式を選択\n" +
            "　[サーフェス]チェックボックス：サーフェイスモデルとワイヤーフレームの切り替え\n" +
            "　[背景黒]チェックボックス：背景色を黒と白の切り替えをする\n" +
            "　[範囲] x/s ：x または s のパラメータの範囲を設定\n" +
            "　[分割数]：面の大きさの設定、大きくすると滑らかになるが時間がかかる\n" +
            "　[範囲] y/t ：y または t のパラメータの範囲を設定\n" +
            "　[分割数]：面の大きさの設定、大きくすると滑らかになるが時間がかかる\n" +
            "　[範囲] z ：z方向の範囲を設定\n" +
            "　[自動]チェックボックス：自動選択すると最小最大値に合わせてZ方向の範囲を設定する\n" +
            "　関数の種別：z = f(x,y) と x = f(s,t); y = g(s,t); z = h(s,t)のどちらかを選択する\n" +
            "　[実行]ボタン＊選択された数式で三次元グラフを表示する\n" +
            "　[削除]ボタン：現在表示されている数式をリストから削除する\n" +
            "　[関数]ボタン：数式で使用できる関数の一覧を表示し、選択した関数が入力される\n" +
            "\n■数式\n" +
            "　数式はセミコロン(;)で区切れば複数記述することができます。\n" +
            "　数式の始まりが$であればコメントとし処理されません\n" +
            "　数式の登録キーワードは最初の数式がコメントであれば、それがキーワードとして登録されます\n" +
            "　コメントでなければ最初の数式がキーワードとして登録されます。\n" +
            "　ただし数式の種類が媒介変数の場合は最初の二つの数式がキーワードとなります。\n" +
            "　数式が複数ある場合は複数の数式に対して色分けでグラフ表示します。\n" +
            "　数式の種類が媒介変数の場合は二つの数式がセットになっていないといけません\n" +
            "\n■数式の変数(パラメータ)\n" +
            "　大括弧[]で囲まれたものが変数として扱います。\n" +
            "　一般的な一次元方程式は[x]を変数としますが、媒介変数方程式と極方程式は[t]を変数とします\n" +
            "　それ以外物の変数として使用できますが必ず定数を設定する記述が必要です\n" +
            "　　例 変数代入: $タイトル;sin([x])*[a];[a]=0.2    ⇒ y=sin(x)*0.2と同じ\n" +
            "\n■数式とその種別\n" +
            "  1.一般的な一次元の方程式(直交座標) z = f(x,y)で表される数式\n" +
            "　　[x]と[y]がパラメータして z を求める\n" +
            "　　例：$メキシカンハット;sin(sqrt([x]^2+[y]^2))/sqrt([x]^2+[y]^2)\n" +
            "  2.媒介変数(パラメトリック)を使った式 x = f(s,t); y = g(st); z = h(s,t)\n" +
            "　　[s]と[t] を媒介変数としてx,y,zを求めるため、３つの数式が必要となる\n" +
            "　　例：$球面;cos([s])*cos([t]);cos([s])*sin([t]);sin([s])\n"
            ;

        public static string mAllWhiteHelp =
            "【パズルゲーム「白にしろ」】 第一学習社\n" +
            "http://www.daiichi-g.co.jp/osusume/forfun/05_white/05.html \n" +
            "\n【遊び方】\n" +
            "　　[問題作成]ボタンを押すとマスの一部の色が反転した盤ができます。\n" +
            "    １つのマスをクリックすると，そのマスと上下左右のマスの色が反転する。\n" +
            "    その作業を繰り返し，すべてのマスを白にしたらクリア。\n" +
            "" +
            "\n　問題が解けない時は[解法]ボタンを押すと解法手順を表示してくれるかもしれません。\n" +
            "\n■解法のアルゴリズムについて\n" +
            "　問題の解法は幅優先探索という方法で初期の盤の状態から系統的にパターンを作っていき問題と" +
            "合致するものがきたら、それを逆順することで解法の手順を見つけるものです。\n" +
            "　そのため手順を見つけるまでの経路とパターンを記憶するためにメモリを使います。\n" +
            "　盤面のパターンは盤の大きさによって増え、このパズルの場合" +
            "1のセルに対して2パターンなのでその組み合わせとなる。\n" +
            "　盤の大きさが 2x2 の時 2^(2x2) = 16   ([^]はべき乗を表す)\n" +
            "　盤の大きさが 3x3 の時 2^(3x3) = 512\n" +
            "　盤の大きさが 4x4 の時 2^(4x4) = 65,5366\n" +
            "　盤の大きさが 5x5 の時 2^(5x5) = 33,544,432 (約33M)\n" +
            "　このプログラムでは一つのパターン40byte+αを使っているので少なくとも 1.3Gbyte以上はメモリを" +
            "消費します。多分データがパックされていないのでそれ以上のメモリを使っていると思われ、5x5 の場合" +
            "ほとんどがメモリ不足となってしまいます。(その前に時間がかかるので待ちきれないかと思いますが)\n";

        public static string mSlideGameHelp =
            "【スライディンクパズル】\n" +
            "　スライディンクブロックパズルというのが正式名称のようです。\n" +
            "　正方形のマスの中に数字が記入されたブロックが乱雑に入っているものをスペースを利用して" +
            "ブロックをスライドさせながら移動し数字の順にブロックを並べなおします。\n" +
            "　盤の大きさが ３ｘ３のものを８パズル、４ｘ４のものを１５パズルといいます。" +
            "\n■遊び方\n" +
            "　1) 盤面の大きさを選択\n" +
            "　2) 問題作成ボタンを押すとランダムにブロックを動かして問題パターンを作成します。\n" +
            "　3) 空白(*マーク)の周りのブロックをクリックすると空白位置に移動するので左上から数値を" +
            "順番並べていき並び終わると完成です。\n" +
            "\n■解法\n" +
            "　[解法]ボタンをおすと解法手順を表示します。" +
            "　３ｘ３(８ゲーム)までは最適解を表示しますが、４ｘ４(１５ゲーム)以上だと最適解を出すにはメモリ不足なるため" +
            "最初に見つかった解法で表示します。そのため最適解ではない可能性があり手数が無駄に大きい場合もあります。\n" +
            "　５ｘ５になると手数が大きくなるため大幅に時間がかかり実用的ではありません";

        public static string mSudokuHelp =
            "【 数独 】\n" +
            "数独（すうどく）は、3×3のブロックに区切られた 9×9の正方形の枠内に1〜9までの数字を入れるペンシルパズルの一つである。\n" +
            "\n■遊び方\n" +
            "　・空いているマスに1〜9のいずれかの数字を入れる。\n" +
            "　・縦・横の各列及び、太線で囲まれた3×3のブロック内に同じ数字が複数入ってはいけない。\n" +
            "\n■操作方法\n" +
            "・数値の入力方法\n" +
            "　マウスをセルの上でjマウスをクリックすると数字ボードが出てきます。\n" +
            "　数字のボードから数値を選択します。クリアするときは右ボタンを押します\n" +
            "　セルの背景が薄いグレーのものは問題のパターンなので変更できません。\n" +
            "・操作手順\n" +
            "　1) 問題パターンの表示\n" +
            "　　問題が登録されている場合には上部のコンボボックスで選択すると問題パターンが出てきます。\n" +
            "　2) 問題パターンの作成\n" +
            "　　問題が登録されていない場合には、すべてクリアしてからマウスでセルをクリックして数値を入れて" +
            "[登録]ボタンを押します。\n" +
            "    [登録]ボタンを押すとパターン名を入力ダイヤログが表示されるのでそこでパターン名を入力します。\n" +
            "    既にあるパターン名を入力するとパターンが上書きされます。\n" +
            "　2) 解答操作\n" +
            "　　ルールに従ってマウスの左クリックで数値を入れていきます。\n" +
            "　　セルを一度クリックすると上部に入力できる数値の候補が出ます。\n" +
            "　　縦か横または3x3のブロックで１～９の数値が揃えば背景が薄い水色に代わります。\n" +
            "　　すべてが揃えば下部に「完成」の文字が表示れます。\n" +
            "\n■操作ボタン\n" +
            "　[登録]ボタン：ボタンの左側のコンボボックスに表示されているパターン名でリストに登録します。\n" +
            "　[削除]ボタン：左側のコンボボックスに表示されているパターン名をリストから削除します。\n" +
            "　[保存]ボタン：現在のボードの状態を保存します。[復元]ボタンで戻ります。\n" +
            "　　　　　　　　一時中断するときや試しに操作するときなどに使えます。\n" +
            "　[復元]ボタン：[保存]ボタンで保存したときのの状態に戻します。\n" +
            "　[クリア]ボタン：１回押すと直前に入力したセルをクリアします。\n" +
            "続けてボタンを押すと問題パターン以外をクリアします。\n" +
            "　　　　　　　　　さらに押すと問題パターンも含めてボード全体をクリアします。\n" +
            "　[解答]ボタン：問題から回答パターンを作成します。(解答が複数でも１種類だけです)\n" +
            "　[？]ボタン：ヘルプの表示(これです)\n" +
            "  [補助機能] チェックボックス： 下部に1-9の表示されたセルが表示され、それをクリックすると" +
            "クリックした数値が使えない場所に線が引かれます。\n" +
            "  [補助機能2]チェックボックス： 数値が入力されていないセルに候補となる数値が表示されます\n" +
            "\n■入力補助機能\n" +
            "　保持機能のチェックボックスをクリックすると下部に１～９までのセルが表示されます。\n" +
            "　この数値のセルをクリックするとその数値が入力できないところに線が引かれます。\n" +
            "　3x3のブロックで入力できる場所が一か所だけだとするとそのセルにその数値が確定します。\n" +
            "　空白が多い状態ではあまり役に立たないかもしれませんがある程度数値が埋まってから行うと助けになります。\n" +
            "\n■おまけ\n" +
            "・問題パターンを修正したい場合\n" +
            "　一度データを「保存」して後、すべてのデータを「クリア」して「復元」をします。\n" +
            "　その状態でデータを修正して再度「登録」をします。\n" +
            "・問題パターンの背景色の変更\n" +
            "　ウィンドウの左上のアイコンをクリックするとシステムメニューが表示されます。\n" +
            "　その最下行の「変更不可セルの色設定」を選択すると色設定のダイヤログが表示されるのでそれで変更できます。\n" +
            "";

        public static string mRubicCubeHelp =
            "【ルービックキューブ】\n" +
            "ルービックキューブのシミュレーション\n" +
            "\n■面の名前\n" +
            "　前(F) : 初期状態で手前の面(黄)\n" +
            "　後(B) : 初期状態で裏側の面(白)\n" +
            "　上(U) : 初期状態で上の面(赤)\n" +
            "　下(D) : 初期状態で下の面(橙)\n" +
            "　左(L) : 初期状態で左側の面(緑)\n" +
            "　右(R) : 初期状態で右側の面(青)\n" +
            "\n■操作\n" +
            "　マウス左ボタン : 面の向きの変更\n" +
            "　マウスホイール : 表示の大きさを変える\n" +
            "　・ボタン操作\n" +
            "　　[前(F)]～[右(R)] : 各面を時計回りまたは反時計回りに少しずつ回転させる\n" +
            "　　　一つの面が立方体に納まるようにしてから別の面を回転させてください。\n" +
            "　　　収まらないうちに別の面を回すと大変なことになります\n" +
            "　　[ランダム化] : ボタン右のコンボボックスの回数分だけ適当に面を回転させる。\n" +
            "　　[リセット] : 初期状態に戻す\n" +
            "　　[?] : ヘルプの表示\n" +
            "　・キー操作\n" +
            "　　F key : 前面の回転\n" +
            "　　B key : 後面の回転\n" +
            "　　U key : 上面の回転\n" +
            "　　D key : 下面の回転\n" +
            "　　L key : 左側面の回転\n" +
            "　　R key : 右側面の回転\n" +
            "　　Q key : 回転方向を逆にする\n" +
            "　　Z key : 初期状態にする\n" +
            "\n" +
            "";

        public static string mBlockGameHelp =
            "【ブロック崩し】\n" +
            "シンプルなブロック崩しゲーム\n" +
            "画面上を反射しながら移動するボールを画面下部に落ちないように\n" +
            "パドル(バー)を左右に操作して打ち返し、レンガ上に並べたブロックを\n" +
            "消していく。\n" +
            "■キー操作\n" +
            "  S key : ゲーム開始\n" +
            "  E key : ゲーム終了\n" +
            "  P key : ゲーム停止\n" +
            "  ← key : パドルを左に移動\n" +
            "  → key : パドルを右に移動\n" +
            "■操作ボタン\n" +
            "  [開始] : ゲーム開始\n" +
            "  [停止] : ゲーム停止\n" +
            "  [[左]   : パドルを左に移動\n" +
            "  [右]   : パドルを右に移動\n" +
            "　[?] : ヘルプの表示\n" +
            "\n" +
            "";

        public static string mTetrisHelp =
            "【テトリス】\n" +
            "落下ゲームで4つの正方形で組み合わせたブロックがランダムに1個ずつ\n" +
            "落下して来るのを落下中に左右に移動したり、回転させたりして枠内に\n" +
            "詰め込んでいくく。横一列が埋まったらその列はなくなり、上に積まれた\n" +
            "正方形が一段下がってくる。上まで積みあがったらゲーム終了となる。\n" +
            "■キー操作\n" +
            "  S key    : ゲーム開始/停止\n" +
            "  Esc key  : ゲーム終了\n" +
            "  ← key   : ブロックを左に移動\n" +
            "  → key   : ブロックを右に移動\n" +
            "  R key    : ブロックを時計回りに90度回転\n" +
            "  M key    : ブロックを縦軸で反転\n" +
            "  PgUp key : 落下速度を早くする\n" +
            "  Pgdn key : 落下速度を遅くする\n" +
            "\n" +
            "";

        public static string mMineSweeperHelp = 
            "【マインスィーパ】\n" +
            "マインスイーパは、地雷を踏まないように全てのブロックを開いていくゲームです\n" +
            "地雷を踏んだ場合や地雷以外をすべて開いたときに下部にメッセージと時間を表示します\n" +
            "■マウス操作\n" +
            "　左クリック : ブロックを開く\n" +
            "　右クリック : 旗を立てる\n" +
            "■メニュー\n" +
            "　列数 : ブロックの列の数を変更\n" +
            "　行数 : ブロックの行の数を変更\n" +
            "　爆弾数 : 地雷の数を変更\n" +
            "■ボタン\n" +
            "　リセット : 盤の状態をリセットします\n" +
            "　？ : ヘルプを表示します\n" +
            "";
    }
}
